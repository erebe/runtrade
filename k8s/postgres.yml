apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: postgres
        image: postgres:13.1-alpine
        imagePullPolicy: IfNotPresent
        args: ["-c", "random_page_cost=1.0"]
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: RUNTRADE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: runtradePassword
        - name: RUNTRADE_USER
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: runtradeUser
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: postgresPassword
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: postgresUser
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          exec:
            command: ["psql", "-w", "-U", "postgres", "-d", "postgres", "-c", "SELECT 1"]
          initialDelaySeconds: 15
          timeoutSeconds: 2
        livenessProbe:
          exec:
            command: ["psql", "-w", "-U", "postgres", "-d", "postgres", "-c", "SELECT 1"]
          initialDelaySeconds: 45
          timeoutSeconds: 2
          periodSeconds: 60
        lifecycle:
          postStart:
            exec:
              command: 
              - "/bin/sh"
              - "-c"
              - > 
                sleep 30;
                psql -U postgres -c "create database keycloak ;";
                psql -U postgres -c "create user ${KEYCLOAK_USER} with password '${KEYCLOAK_PASSWORD}' ;";
                psql -U postgres -c "grant all privileges on database keycloak to ${KEYCLOAK_USER} ;";
                psql -U postgres -c "create user ${RUNTRADE_USER} with password '${RUNTRADE_PASSWORD}' ;";
                psql -U postgres -c "grant all privileges on database runtrade to ${RUNTRADE_USER} ;";
      volumes:
      - name: data
        hostPath:
          path: /opt/postgres/data
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      name: postgres
  clusterIP: None
  type: ClusterIP

